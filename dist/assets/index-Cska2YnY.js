(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))a(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&a(h)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();const K={speedMultiplier:1,volume:1,init(){this.loadSettings(),this.setupUI(),this.setupPopupControls()},loadSettings(){const s=localStorage.getItem("gameSpeed"),e=localStorage.getItem("gameVolume");s&&(this.speedMultiplier=parseFloat(s)),e&&(this.volume=parseFloat(e))},saveSettings(){localStorage.setItem("gameSpeed",this.speedMultiplier),localStorage.setItem("gameVolume",this.volume)},setupUI(){const s=document.getElementById("speedSlider"),e=document.getElementById("volumeSlider");s&&(s.value=this.speedMultiplier,s.addEventListener("input",t=>{this.speedMultiplier=parseFloat(t.target.value),this.saveSettings()})),e&&(e.value=this.volume,e.addEventListener("input",t=>{this.volume=parseFloat(t.target.value),this.saveSettings()}))},setupPopupControls(){const s=document.getElementById("settingsPopup"),e=document.querySelector(".settings-btn"),t=document.querySelector("#settingsPopup button");console.log("settingsPopup:",s),console.log("settingsButton:",e),console.log("closeButton:",t),e&&s&&e.addEventListener("click",()=>{console.log("Settings button clicked!"),s.style.display="flex"}),t&&t.addEventListener("click",()=>{console.log("Close button clicked!"),s.style.display="none"})}};K.init();class L{constructor(e,t){this.x=l.width,this.y=e*n,this.type="normal",this.health=100+(t-1)*15,this.speed=.8,this.background="red",this.laneIndex=e,this.width=n,this.height=n,this.isStopped=!1,this.damage=2,this.attackspeed=15}move(){this.isStopped||(this.x-=this.speed)}stopMove(){this.isStopped=!0,this.x=n*Math.ceil(this.x/n)}resumeMove(){this.isStopped=!1}draw(e){e.fillStyle=this.background,e.fillRect(this.x,this.y,this.width,this.height),e.fillStyle="black",e.font="20px Impact",e.textAlign="center",e.fillText(Math.floor(this.health),this.x+n/2,this.y+n/2)}attack(e){e.health-=this.damage}}let u=[];function z(s){u=s}const J=[{type:"fast",weight:.3},{type:"tank",weight:.3},{type:"normal",weight:.4}];function Q(s){if(s%5===0)return"boss";let e=Math.random(),t=0;for(let a of J)if(t+=a.weight,e<t)return a.type}class Z{constructor(e,t,a,i){switch(this.x=e,this.y=t,this.name="bullet",this.speed=3,this.width=5,this.height=5,this.bulletDamage=2,this.laneIndex=a,this.pierceAmount=1,this.hitEnemies=new Set,this.color="purple",i){case"pierce":this.pierceAmount=3,this.color="blue";break;case"basic":this.pierceAmount=1,this.color="black";break;default:this.color="pink"}}doesLaserHit(){return!1}move(){this.x+=this.speed}draw(e){e.fillStyle=this.color,e.fillRect(this.x+n/2,this.y+n/2,this.width,this.height)}dealDamage(e){e.health-=this.bulletDamage,this.pierceAmount--,this.hitEnemies.add(e)}}function B(s,e,t){switch(t){case"boundingBox":return s.x<e.x+e.width&&s.x+s.width>e.x&&s.y<e.y+e.height&&s.y+s.height>e.y;default:return e.x>=s.x&&e.x<=s.x+50&&s.y===e.y}}class y{constructor(e,t,a){this.x=e,this.y=t,this.name="Shooter",this.health=100,this.range=500,this.damage=5,this.width=n,this.height=n,this.projectiles=[],this.fireRate=30,this.timer=0,this.iFrames=0,this.stopEnemy=100,this.upgradeCost=150,this.upgrades=0,this.selected=!1,this.bulletType=a,this.isColliding=!1,this.background="blue",this.textColor="lightgray"}stopEnemyMovement(e){if(this.stopEnemy<=0)for(let t of e)B(this,t)&&(this.isColliding=!0,t.stopMove());else this.stopEnemy>0&&this.stopEnemy--}updateTowerCollision(e,t){if(this.iFrames<=0)for(let a of e){if(B(this,a,"test")&&(a.stopMove(),a.attack(this),this.health<=0)){d.splice(t,1),this.isColliding=!1,this.deathMessage="-5 Resources",this.deathMessageTimer=60,v("decrease",5);for(let i of e)i.resumeMove()}this.iFrames+=a.attackspeed}else this.iFrames--}attack(e,t){this.timer<=0?(e.forEach(a=>{if(Math.abs(a.y-this.y)<10&&Math.abs(a.x-this.x)<this.range){const i=new Z(this.x,this.y,this.y,this.bulletType);i.bulletDamage=this.damage,t.push(i)}}),this.timer=this.fireRate):this.timer--}draw(e){e.fillStyle=this.background,e.fillRect(this.x+2,this.y+2,46,46),this.selected?(e.fillStyle="white",e.strokeStyle="black",e.lineWidth=3,e.strokeRect(this.x+2,this.y+2,46,46)):e.fillStyle=this.textColor,e.font="20px Impact",e.textAlign="center",e.fillText(Math.floor(this.health),this.x+n/2,this.y+n/2)}upgrade(){if(m<this.upgradeCost||this.upgradeCost===-1)return;const e=this.upgradeCost;switch(this.upgrades){case 0:this.range+=50,this.fireRate=25,this.damage=2,this.upgradeCost=300;break;case 1:this.range+=100,this.fireRate=20,this.damage=3,this.upgradeCost=1e3;break;case 2:this.range+=150,this.fireRate=15,this.damage=5,this.upgradeCost=5e3;break;case 3:this.range+=200,this.fireRate=20,this.damage=20,this.upgradeCost=1e9;break;default:return}p("decrease",e),this.health+=50,this.upgrades++}getUpgradeStats(){const e={health:this.health,range:this.range,fireRate:this.fireRate,damage:this.damage,upgradeCost:this.upgradeCost};let t=this.range,a=this.fireRate,i=this.damage,r=this.upgradeCost;switch(this.upgrades){case 0:t+=50,a=25,i=3,r=300;break;case 1:t+=100,a=20,i=3,r=1e3;break;case 2:t+=150,a=15,i=5,r=5e3;break;case 3:t+=150,a=20,i=20,r=1e9;break;default:return{oldStats:e,newStats:e}}const h={health:e.health+50,range:t,fireRate:a,damage:i,upgradeCost:r};return{oldStats:e,newStats:h}}}const d=[],f=[];class ee extends L{constructor(e,t){super(e,t),this.type="fast",this.health=50+(t-1)*10,this.speed=1.2,this.background="orange"}}class te extends L{constructor(e,t){super(e,t),this.type="tank",this.health=200+(t-1)*20,this.speed=.5,this.background="darkgreen"}}class se extends L{constructor(e,t){super(e,t),this.type="boss",this.health=500+(t-1)*50,this.speed=.8,this.background="purple"}}function ae(s,e,t){let a;switch(t){case"fast":a=new ee(s,e);break;case"tank":a=new te(s,e);break;case"boss":a=new se(s,e);break;default:a=new L(s,e);break}return console.log("Spawned enemy:",a),a}let b=0,A=!1,G;async function _(){if(A)return;b++,A=!0;const s=b*2;for(let e=0;e<s;e++){let t=Math.floor(Math.random()*Ee)+1;const a=Q(b),i=ae(t,b,a);u.push(i),await oe(Math.max(100,1e3-b))}}function ie(){_()}function re(){u.length>=1||(A=!1)}function ne(){return b}async function oe(s){return new Promise(e=>setTimeout(e,s))}window.toggleAutoWave=()=>{document.getElementById("autoWaveCheckbox").checked?(G=setInterval(_,500),console.log("Auto wave enabled")):(clearInterval(G),console.log("Auto wave disabled"))};const l=document.getElementById("gameCanvas"),o=l.getContext("2d");document.querySelector(".tower-damage");document.querySelector(".tower-upgrade-price");const x=document.querySelector(".tower-upgrade-btn");window.startWaveButton=ie;let m=1e3,j=50,R=100,q;function he(){if(o.clearRect(0,0,l.width,l.height),o.textBaseline="middle",o.fillStyle="#ffa500",o.fillRect(0,0,k.width,k.height),o.fillStyle="black",o.font="20px Arial",o.textAlign="left",o.fillText("💶 "+m,20,k.height/2),o.textAlign="center",o.fillText("⚒️ Resources: "+R,l.width/2,k.height/2),o.textAlign="right",o.fillText("Wave: "+Math.max(1,ne()),l.width-20,k.height/2),o.textAlign="center",q){o.fillStyle="black",o.fillRect(0,0,l.width,l.height),o.font="50px Arial",o.fillStyle="white",o.fillText("💀 Game Over 💀",l.width/2,l.height/2);return}Te(),Ie(),u.forEach(s=>{s.draw(o)}),d.forEach(s=>{s.draw(o)});for(let s of f)s.draw(o)}function le(){let s=d.find(t=>t.selected);const e=[];for(let t of u){if(t.move(),t.health<=0){p("increase",20),v("increase",1);continue}if(t.x+t.width<0){v("decrease",10);continue}e.push(t)}z(e),re(),d.forEach((t,a)=>{t.stopEnemyMovement(u),t.updateTowerCollision(u,a),t.attack(u,f)}),R<=0&&(q=!0),$(s)}function p(s,e){if(typeof e!="number"||isNaN(e)){console.error("Invalid amount:",e);return}switch(s){case"increase":m+=e;break;case"decrease":m-=e;break;default:console.warn(`Unknown action: "${s}". No changes made.`);return}}function v(s,e){if(typeof e!="number"||isNaN(e)){console.error("Invalid amount:",e);return}switch(s){case"increase":R+=e;break;case"decrease":R-=e;break;default:console.warn(`Unknown action: "${s}". No changes made.`);return}}function ce(s){let e="";for(let t=0;t<=s.upgrades;t++)e+="⭐";return e}function $(s){if(!s)return;const e=s&&m>=s.upgradeCost,t=s.getUpgradeStats();document.querySelector(".tower-title-display").textContent=s.name,document.querySelector(".tower-lvl").textContent=ce(s),e?(document.querySelector(".hp-title-display").innerHTML=`${t.oldStats.health} → ${t.newStats.health}`,document.querySelector(".range-title-display").innerHTML=`${t.oldStats.range} → ${t.newStats.range}`,document.querySelector(".firerate-title-display").innerHTML=`${t.oldStats.fireRate} → ${t.newStats.fireRate}`,document.querySelector(".tower-upgrade-price").textContent=s.upgradeCost,x.classList.add("upgrade","hover-upgrade","active"),x.innerText="UPGRADE ˋ°•*⁀➷"):(document.querySelector(".hp-title-display").textContent=t.oldStats.health,document.querySelector(".range-title-display").textContent=t.oldStats.range,document.querySelector(".firerate-title-display").textContent=t.oldStats.fireRate,document.querySelector(".tower-upgrade-price").textContent=t.oldStats.upgradeCost,x.classList.remove("upgrade","hover-upgrade","active"),x.innerText="Insufficient balance")}function de(){const s=[];for(let e of f){e.move();let t=!1;if(e.name==="laser"&&e.localIframes>0&&e.localIframes--,e.name==="laser")for(let a of u)e.doesLaserHit(a)&&e.localIframes<=0&&e.lifetime>0&&(e.dealDamage(a),s.push(e));else for(let a of u)if(B(a,e,"boundingBox")&&e.pierceAmount>0&&!e.hitEnemies.has(a)){e.name=="rocket"?e.dealDamage(a,u):e.dealDamage(a),e.pierceAmount<=0&&(t=!0);break}!t&&e.x<l.width-50&&s.push(e)}f.length=0,f.push(...s)}class ue extends y{constructor(e,t,a){super(e,t,a),this.name="Sniper",this.health=30,this.range=700,this.damage=15,this.projectiles=[],this.fireRate=120,this.bulletType=a,this.background="yellow"}upgrade(){if(m<this.upgradeCost||this.upgradeCost===-1)return;const e=this.upgradeCost;switch(this.upgrades){case 0:this.range+=50,this.damage=20,this.upgradeCost=300;break;case 1:this.range+=100,this.damage=25,this.upgradeCost=1e3;break;case 2:this.range+=150,this.damage=30,this.upgradeCost=5e3;break;case 3:this.range+=200,this.fireRate=100,this.damage=35,this.upgradeCost=1e9;break;default:return}p("decrease",e),this.health+=50,this.upgrades++}getUpgradeStats(){const e={health:this.health,range:this.range,fireRate:this.fireRate,damage:this.damage,upgradeCost:this.upgradeCost};let t=this.range,a=this.fireRate,i=this.damage,r=this.upgradeCost;switch(this.upgrades){case 0:t+=50,i=20,r=300;break;case 1:t+=100,i=25,r=1e3;break;case 2:t+=150,i=30,r=5e3;break;case 3:t+=150,a=100,i=35,r=1e9;break;default:return{oldStats:e,newStats:e}}const h={health:e.health+50,range:t,fireRate:a,damage:i,upgradeCost:r};return{oldStats:e,newStats:h}}}class ge extends y{constructor(e,t,a){super(e,t,a),this.name="Gatling",this.health=60,this.range=300,this.damage=1,this.projectiles=[],this.fireRate=10,this.bulletType=a,this.background="green"}upgrade(){if(m<this.upgradeCost||this.upgradeCost===-1)return;const e=this.upgradeCost;switch(this.upgrades){case 0:this.range+=20,this.fireRate=9,this.upgradeCost=300;break;case 1:this.range+=40,this.fireRate=8,this.damage=2,this.upgradeCost=1e3;break;case 2:this.range+=60,this.fireRate=7,this.upgradeCost=5e3;break;case 3:this.range+=100,this.fireRate=6,this.damage=3,this.upgradeCost=1e9;break;default:return}p("decrease",e),this.health+=50,this.upgrades++}getUpgradeStats(){const e={health:this.health,range:this.range,fireRate:this.fireRate,damage:this.damage,upgradeCost:this.upgradeCost};let t=this.range,a=this.fireRate,i=this.damage,r=this.upgradeCost;switch(this.upgrades){case 0:t+=20,a=9,r=300;break;case 1:t+=40,a=8,i=2,r=1e3;break;case 2:t+=60,a=7,r=5e3;break;case 3:t+=100,a=6,i=3,r=1e9;break;default:return{oldStats:e,newStats:e}}const h={health:e.health+50,range:t,fireRate:a,damage:i,upgradeCost:r};return{oldStats:e,newStats:h}}}class me{constructor(e,t,a,i,r){this.x=e,this.y=t,this.name="laser",this.width=2,this.height=2,this.targetX=a,this.targetY=i,this.bulletDamage=4,this.pierceAmount=1,this.localIframes=0,this.lifetime=1,this.bulletSource=r,this.name="laser"}move(){}isAlive(){var e;return this.lifetime>0&&((e=this.bulletSource)==null?void 0:e.health)>0}draw(e){e.strokeStyle="cyan",e.lineWidth=2,e.beginPath(),e.moveTo(this.x+n/2,this.y+n/2),e.lineTo(this.targetX+n/2,this.targetY+n/2),e.stroke()}dealDamage(e){console.log(this.lifetime),e.health-=this.bulletDamage,this.localIframes=30}doesLaserHit(e){const t=this.targetX-this.x,a=this.targetY-this.y,i=t*t+a*a,r=((e.x-this.x)*t+(e.y-this.y)*a)/i,h=Math.max(0,Math.min(1,r)),X=this.x+h*t,Y=this.y+h*a,U=e.x-X,F=e.y-Y;return U*U+F*F<400}}class pe extends y{constructor(e,t,a){super(e,t,a),this.name="laser",this.width=5,this.height=5,this.health=30,this.range=1e3,this.damage=4,this.fireRate=5,this.projectiles=[],this.fireRate=50,this.bulletType=a,this.background="purple"}attack(e,t){if(this.timer<=0){const a=e.find(i=>Math.abs(i.y-this.y)<10&&Math.abs(i.x-this.x)<this.range);if(a){const i=new me(this.x,this.y,a.x,a.y,this);i.bulletDamage=this.damage,t.push(i)}this.timer=this.fireRate}else this.timer--}}class fe extends y{constructor(e,t,a){super(e,t,a),this.name="error",this.health=60,this.range=300,this.damage=1,this.projectiles=[],this.fireRate=10,this.bulletType=a,this.background="black"}upgrade(){if(m<this.upgradeCost||this.upgradeCost===-1)return;const e=this.upgradeCost;switch(this.upgrades){case 0:break;case 1:break;case 2:break;case 3:break;default:return}p("decrease",e),this.health+=50,this.upgrades++}getUpgradeStats(){const e={health:this.health,range:this.range,fireRate:this.fireRate,damage:this.damage,upgradeCost:this.upgradeCost};let t=this.range,a=this.fireRate,i=this.damage,r=this.upgradeCost;switch(this.upgrades){case 0:break;case 1:break;case 2:break;case 3:break;default:return{oldStats:e,newStats:e}}const h={health:e.health+50,range:t,fireRate:a,damage:i,upgradeCost:r};return{oldStats:e,newStats:h}}}class we{constructor(e,t,a){this.x=e,this.y=t,this.target=a,this.name="rocket",this.exploded=!1,this.bulletDamage=3,this.speed=.05,this.width=5,this.height=5,this.aoe=60,this.bulletDamage=2,this.explosionLifetime=100,this.pierceAmount=1,this.hitEnemies=new Set,this.color="purple"}move(){this.exploded||(this.x+=(this.target.x-this.x)*this.speed,this.y+=(this.target.y-this.y)*this.speed)}draw(e){e.fillStyle="red",e.beginPath(),e.arc(this.x+n/2,this.y+n/2,5,0,Math.PI*2),e.fill(),this.exploded&&(e.fillStyle="orange",e.beginPath(),e.arc(this.x+n/2,this.y+n/2,40,0,Math.PI*2),e.fill(),setTimeout(()=>{const t=f.indexOf(this);t>-1&&f.splice(t,1)},this.explosionLifetime))}dealDamage(e,t){this.exploded||(e.health-=this.bulletDamage,t.forEach(a=>{Math.abs(a.x-this.x)<this.aoe&&Math.abs(a.y-this.y)<this.aoe&&(a.health-=this.bulletDamage)}),this.exploded=!0)}doesLaserHit(){return!1}}class ye extends y{constructor(e,t,a){super(e,t,a),this.name="Rocket",this.health=30,this.range=700,this.damage=10,this.projectiles=[],this.fireRate=160,this.bulletType=a,this.background="grey"}attack(e,t){if(this.timer<=0){for(let a of e)if(Math.abs(a.y-this.y)<10&&Math.abs(a.x-this.x)<this.range){const i=new we(this.x,this.y,a);i.bulletDamage=this.damage,t.push(i);break}this.timer=this.fireRate}else this.timer--}upgrade(){if(m<this.upgradeCost||this.upgradeCost===-1)return;const e=this.upgradeCost;switch(this.upgrades){case 0:this.range+=50,this.damage=14,this.upgradeCost=300;break;case 1:this.range+=100,this.fireRate=150,this.damage=18,this.upgradeCost=1e3;break;case 2:this.range+=150,this.fireRate=140,this.damage=22,this.upgradeCost=5e3;break;case 3:this.range+=200,this.fireRate=120,this.damage=28,this.upgradeCost=1e9;break;default:return}p("decrease",e),this.health+=50,this.upgrades++}getUpgradeStats(){const e={health:this.health,range:this.range,fireRate:this.fireRate,damage:this.damage,upgradeCost:this.upgradeCost};let t=this.range,a=this.fireRate,i=this.damage,r=this.upgradeCost;switch(this.upgrades){case 0:t+=50,i=20,r=300;break;case 1:t+=100,i=25,r=1e3;break;case 2:t+=150,i=30,r=5e3;break;case 3:t+=150,a=100,i=35,r=1e9;break;default:return{oldStats:e,newStats:e}}const h={health:e.health+50,range:t,fireRate:a,damage:i,upgradeCost:r};return{oldStats:e,newStats:h}}}class E extends y{constructor(e,t,a){super(e,t,a),this.name="barricade",this.x=e,this.y=t,this.health=500,this.background="darkgray",this.textColor="white",this.selected=!1}destroy(){console.log("Barricade destroyed!"),E.splice(E.indexOf(this),1)}attack(){}upgrade(){if(money<this.upgradeCost||this.upgradeCost===-1)return;const e=this.upgradeCost;switch(this.upgrades){case 0:break;case 1:break;case 2:break;case 3:break;default:return}updateMoney("decrease",e),this.health+=50,this.upgrades++}getUpgradeStats(){const e={health:this.health,range:this.range,fireRate:this.fireRate,damage:this.damage,upgradeCost:this.upgradeCost};let t=this.range,a=this.fireRate,i=this.damage,r=this.upgradeCost;switch(this.upgrades){case 0:break;case 1:break;case 2:break;case 3:break;default:return{oldStats:e,newStats:e}}const h={health:e.health+50,range:t,fireRate:a,damage:i,upgradeCost:r};return{oldStats:e,newStats:h}}}let T;function O(s){T=s,console.log("valgte "+T+" tower")}function be(){return T??"basic"}function ke(s,e,t){let a;switch(console.log("placed "+t),t){case"sniper":a=new ue(s,e,"pierce");break;case"gatling":a=new ge(s,e,"basic");break;case"laser":a=new pe(s,e,"laser");break;case"rocket":a=new ye(s,e,"rocket");break;case"barricade":a=new E(s,e),O("basic");break;case"basic":a=new y(s,e,"basic");break;default:a=new fe(s,e,"error")}return a}const g={x:10,y:10,width:.1,height:.1};function Se(){const s=g.x-g.x%n,e=g.y-g.y%n;if(!(e<n)){if(d){const a=d.find(i=>i.selected);a&&(a.selected=!1)}for(let a of d)if(a.x===s&&a.y===e){a.selected=!0;break}if(m>=j&&!d.some(a=>a.selected)){var t=be();const a=ke(s,e,t);d.push(a),a.selected=!0,p("decrease",j),v("increase",10)}if(d){const a=d.find(i=>i.selected);$(a)}}}l.addEventListener("contextmenu",s=>s.preventDefault());function Ce(s){let e=l.getBoundingClientRect();g.x=s.x-e.left,g.y=s.y-e.top}function xe(s){g.x=void 0,g.y=void 0}function H(s,e){if(!(s.x>e.x+e.width||s.x+s.width<e.x||s.y>e.y+e.height||s.y+s.height<e.y))return!0}function Re(s){document.querySelectorAll(".tabs>.selected").forEach(t=>{t.classList.remove("selected")}),s.classList.add("selected"),document.querySelectorAll(".tab").forEach(t=>{t.classList.remove("open")});const e=s.getAttribute("data-tab");document.querySelector(`.tab.${e}`).classList.add("open")}window.upgradeTower=()=>{const s=d.find(e=>e.selected);console.log("H"+d.length),s&&(s.oldStats={...s.newStats},s.upgrade(),$(s))};window.openTab=Re;class ve{constructor(e,t){this.x=e,this.y=t,this.width=n,this.height=n}draw(){const e=u.filter(t=>H(this,t)).length>0;g.x&&g.y&&H(this,g)&&(o.strokeStyle=e?"gray":"black",o.lineWidth=1,o.strokeRect(this.x,this.y,this.width,this.height))}}const w=document.getElementById("gameCanvas");w.getContext("2d");w.width=900;w.height=300;const n=50,I=[],k={width:w.width,height:n};let Ee=Math.floor((w.height-k.height)/n);function Te(){I.length=0;for(let s=n;s<w.height;s+=n)for(let e=0;e<w.width;e+=n)I.push(new ve(e,s))}function Ie(){for(let s=0;s<I.length;s++)I[s].draw()}l.addEventListener("click",Se);l.addEventListener("mousemove",Ce);l.addEventListener("mouseleave",xe);let W=-1;const Me=250;let C={drawGameTime:0,updateGameStateTime:0,projectileHandlerTime:0};function N(s){const e=performance.now();if(he(),C.drawGameTime=performance.now()-e,q||(requestAnimationFrame(N),(s-W)/1e3<1/Me))return;W=s;const a=performance.now();le(),C.updateGameStateTime=performance.now()-a;const i=performance.now();de(),C.projectileHandlerTime=performance.now()-i}N();document.querySelectorAll("[tower-type]").forEach(s=>{s.addEventListener("click",()=>{const e=s.getAttribute("tower-type");O(e)})});window.printCounters=s=>{console.clear(),console.log("projectiles:",f.length),console.log("enemies:",u.length),console.log("towers:",d.length);for(let e in C)console.log(e+":",C[e])};class D{constructor(e,t,a,i){this.name=e,this.price=t,this.description=a,this.image=i}attack(e){console.log(`${this.name} attacks ${e}!`)}}class Le extends D{constructor(e,t){super("Barricade",100,"Blocks enemy movement but does no damage.","images/barricade.png")}}const M={barricade:new Le,mine:new D("Mine",150,"Explodes when enemies step on it.","images/mine.png"),slowTrap:new D("Slow Trap",120,"Slows down enemies for a duration.","images/slowtrap.png")};let S=[],c=null,Be=.5;function P(){const s=[];for(let t of S){const a=document.createElement("div");a.classList.add("slot"),a.innerHTML=`
            <img src="${t.image}" alt="${t.name}"/>
            <h3>${t.name}</h3>
        `,a.addEventListener("click",()=>Ae(t)),s.push(a)}document.getElementById("inventoryCards").replaceChildren(...s)}function Ae(s){c=s,document.getElementById("selected-item-image").src=s.image,document.getElementById("selected-item-name").textContent=s.name,document.getElementById("selected-item-description").textContent=s.description}function De(s){const e=s.constructor?new s.constructor:{...s};S.push(e),P()}function qe(s){if(!c){alert("Velg et item før du bruker det.");return}c.placeOnBoard?(s.selectedTowerType=c.constructor.name,console.log("Ready to place:",c.constructor.name)):typeof c.effect=="function"&&c.effect(s);const e=S.indexOf(c);e!==-1&&!c.reusable&&S.splice(e,1),c=null,P(),V()}function $e(){if(!c)return;const s=S.indexOf(c);if(s!==-1){S.splice(s,1);const e=Math.floor((c.price||0)*Be);p("increase",e),console.log(`Refunding: ${e} for deleting ${c.name}`)}c=null,P(),V()}function V(){document.getElementById("selected-item-image").src="",document.getElementById("selected-item-name").textContent="Ingen Items Valgt!",document.getElementById("selected-item-description").textContent="Velg et item."}window.useItem=qe;window.deleteButton=$e;console.log("Shop.js loaded");console.log("Items:",M);document.addEventListener("DOMContentLoaded",()=>{const s=document.querySelector(".shop-items");s.innerHTML="";for(let a in M){const i=M[a],r=document.createElement("div");r.classList.add("shop-item"),r.innerHTML=`
            <img src="${i.image}" alt="${i.name}">
            <p>${i.name}</p>
            <p class="item-price"><span>${i.price}</span> 💶</p>
        `,r.onclick=()=>Pe(a),s.appendChild(r)}const e=document.getElementById("buy-button"),t=document.getElementById("purchase-message");e.addEventListener("click",()=>{if(window.selectedItem){const a=window.selectedItem.price;m>=a?(p("decrease",a),De(window.selectedItem),t.textContent="Item purchased!",t.classList.remove("hidden"),setTimeout(()=>{t.classList.add("hidden")},2e3)):alert("Not enough money!")}else alert("Select an item first!")})});function Pe(s){const e=M[s];e&&(document.getElementById("item-image").src=e.image,document.getElementById("item-name").textContent=e.name,document.getElementById("item-description").textContent=e.description,document.getElementById("item-price").textContent=e.price,window.selectedItem=e)}
